# -*- coding: utf-8 -*-
#import scrapy
from scrapy import Spider
from scrapy.http import Request

#import scrapy items
from exploit_crawlers.items import ExploitCrawlersItem

#Use sleep function to throttle ussage
from time import sleep
import random

class CxsecuritySpider(Spider):
    name = 'cxsecurity'
    allowed_domains = ['cxsecurity.com']
    start_urls = ['http://cxsecurity.com/exploit/']


    def parse(self, response):
        exploits = response.xpath('//h6/a/@href').extract()
        for exploit in exploits:
            #absolute_url = response(exploit)
            yield Request(exploit, callback=self.parse_exploit)

    def parse_exploit(self, response):

        #Extract exploit data
        title = response.xpath('//h4/b/text()').extract_first()
        date = response.xpath('//*[@class="col-xs-12 col-md-3"]/div/b/text()').extract_first()
        credit = response.xpath('//u[contains(., "Credit:")]/following-sibling::b/a/text()').extract_first()
        risk = response.xpath('//u[contains(., "Risk:")]/following-sibling::b/span/text()').extract_first()
        local = response.xpath('//u[contains(., "Local:")]/following-sibling::b/b/text()').extract_first()
        remote = response.xpath('//u[contains(., "Remote:")]/following-sibling::b/text()').extract_first()
        cve = response.xpath('//u[contains(., "CVE:")]/following-sibling::b/text()').extract_first()
        cwe = response.xpath('//u[contains(., "CWE:")]/following-sibling::b/text()').extract_first()
        code = response.xpath('//*[@class="well well-sm premex"]/text()').extract_first()

        #Process Item
        item = ExploitCrawlersItem()

        item['title'] = title
        item['date'] = date
        item['credit'] = credit
        item['risk'] = risk
        item['local'] = local
        item['remote'] = remote
        item['cve'] = cve
        item['cwe'] = cwe
        item['code'] = code

        return item

    #Code to sleep
    sleep(random.randrange(1,3))
